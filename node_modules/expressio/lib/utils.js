'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _ndtk = require('ndtk');

var _ndtk2 = _interopRequireDefault(_ndtk);

var _isString = require('lodash/isString');

var _isString2 = _interopRequireDefault(_isString);

var _isPlainObject = require('lodash/isPlainObject');

var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Helper for loading
 * app and default config objects
 */
/**
 * Utility Functions
 *
 * @copyright Copyright (c) 2017, hugw.io
 * @author Hugo W - contact@hugw.io
 * @license MIT
 */

const config = (name, defaults) => _ndtk2.default.config(_ndtk2.default.req(name), _ndtk2.default.req(defaults));

/**
 * Validate object schemas
 * using Joi validator
 */
const sanitize = (object, schema, message) => {
  // Ensure schema is a valid Joi object
  _ndtk2.default.assert(schema && schema.isJoi, 'Sanitize error: schema provided is not a valid Joi schema');

  // Ensure object is valid
  _ndtk2.default.assert((0, _isPlainObject2.default)(object), 'Sanitize error: object provided is not valid');

  const result = _joi2.default.validate(object, schema, { stripUnknown: true });
  const errMessage = (0, _isString2.default)(message) ? message : 'Invalid config';

  if (result.error) _ndtk2.default.assert(false, `${errMessage}: ${result.error.details[0].message}`);

  return result.value;
};

exports.default = { config, sanitize };
//# sourceMappingURL=utils.js.map