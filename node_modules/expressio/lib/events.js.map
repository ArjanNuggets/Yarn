{"version":3,"sources":["../src/events.js"],"names":["server","stack","on","event","fn","ndtk","assert","length","emit","args","events","Promise","all","map"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;;;kBAEgBA,MAAD,IAAY;AACzB,QAAMC,QAAQ,EAAd;;AAEA;;;AAGA,QAAMC,KAAK,CAACC,KAAD,EAAQC,EAAR,KAAe;AACxBC,mBAAKC,MAAL,CAAY,wBAASH,KAAT,KAAmBA,MAAMI,MAAN,KAAiB,CAAhD,EAAmD,qCAAnD;AACAF,mBAAKC,MAAL,CAAY,0BAAWF,EAAX,CAAZ,EAA6B,kBAAiBD,KAAM,kCAApD;;AAEA,QAAI,CAACF,MAAME,KAAN,CAAL,EAAmBF,MAAME,KAAN,IAAe,CAACC,EAAD,CAAf,CAAnB,KACKH,MAAME,KAAN,IAAe,CAAC,GAAGF,MAAME,KAAN,CAAJ,EAAkBC,EAAlB,CAAf;AACN,GAND;;AAQA;;;;;AAKA,QAAMI,OAAO,CAACL,KAAD,EAAQ,GAAGM,IAAX,KAAoB;AAC/BJ,mBAAKC,MAAL,CAAY,wBAASH,KAAT,KAAmBA,MAAMI,MAAN,KAAiB,CAAhD,EAAmD,qCAAnD;;AAEA,UAAMG,SAAST,MAAME,KAAN,KAAgB,EAA/B;AACA,WAAOQ,QAAQC,GAAR,CAAYF,OAAOG,GAAP,CAAWT,MAAMA,GAAGJ,MAAH,EAAW,GAAGS,IAAd,CAAjB,CAAZ,CAAP;AACD,GALD;;AAOA;AACAT,SAAOU,MAAP,GAAgB,EAAER,EAAF,EAAMM,IAAN,EAAhB;AACD,C,EAxCD","file":"events.js","sourcesContent":["/**\n * Events\n *\n * @copyright Copyright (c) 2018, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nimport isString from 'lodash/isString'\nimport isFunction from 'lodash/isFunction'\nimport ndtk from 'ndtk'\n\nexport default (server) => {\n  const stack = {}\n\n  /**\n   * Register to new events\n   */\n  const on = (event, fn) => {\n    ndtk.assert(isString(event) && event.length !== 0, 'Events error: event is not a string')\n    ndtk.assert(isFunction(fn), `Events error: \"${event}\" event has not a valid function`)\n\n    if (!stack[event]) stack[event] = [fn]\n    else stack[event] = [...stack[event], fn]\n  }\n\n  /**\n   * Emit new events\n   *\n   * The first argument is always the server instance\n   */\n  const emit = (event, ...args) => {\n    ndtk.assert(isString(event) && event.length !== 0, 'Events error: event is not a string')\n\n    const events = stack[event] || []\n    return Promise.all(events.map(fn => fn(server, ...args)))\n  }\n\n  // Expose JWT Api to the server object\n  server.events = { on, emit }\n}\n"]}