{"version":3,"sources":["../src/mailer.js"],"names":["schema","Joi","object","enabled","boolean","required","transport","defaults","from","string","server","config","utils","sanitize","transporter","nodemailer","createTransport","logger","dispatch","msg","info","sendMail","response","content","text","html","debug","getTestMessageUrl","mailer","options","err","message","use","req","res","next"],"mappings":";;;;;;kQAAA;;;;;;;;AAQA;;;;AACA;;;;AAEA;;;;;;AAEA;;;;AAIA,MAAMA,SAASC,cAAIC,MAAJ,CAAW;AACxBC,WAASF,cAAIG,OAAJ,GAAcC,QAAd,EADe;AAExBC,aAAWL,cAAIC,MAAJ,GAAaG,QAAb,EAFa;AAGxBE,YAAUN,cAAIC,MAAJ,CAAW;AACnBM,UAAMP,cAAIQ,MAAJ,GAAaJ,QAAb;AADa,GAAX,EAEPA,QAFO;AAHc,CAAX,CAAf;;kBAQe,CAACK,MAAD,EAASC,MAAT,KAAoB;AACjC,QAAM;AACJR,WADI;AAEJG,aAFI;AAGJC;AAHI,MAIFK,gBAAMC,QAAN,CAAeF,MAAf,EAAuBX,MAAvB,EAA+B,uBAA/B,CAJJ;;AAMA,MAAI,CAACG,OAAL,EAAc;AACd,QAAMW,cAAcC,qBAAWC,eAAX,CAA2BV,SAA3B,EAAsCC,QAAtC,CAApB;AACA,QAAM,EAAEU,MAAF,KAAaP,MAAnB;;AAEA;;;AAGAI,cAAYI,QAAZ,GAAuB,MAAOC,GAAP,IAAe;AACpC,QAAI;AACF,YAAMC,OAAO,MAAMN,YAAYO,QAAZ,CAAqBF,GAArB,CAAnB;;AAEA,YAAMG,wBACDF,IADC;AAEJG,iBAASJ,IAAIK,IAAJ,IAAYL,IAAIM,IAAhB,IAAwB;AAF7B,QAAN;;AAKA,YAAMC,QAAQX,qBAAWY,iBAAX,CAA6BP,IAA7B,KAAsC,IAApD;;AAEAH,aAAOG,IAAP,CAAY,IAAZ,EAAkB;AAChBQ,gBAAQ,EAAEN,QAAF,EAAYI,KAAZ,EADQ;AAEhBG,iBAASZ,OAAOY;AAFA,OAAlB;;AAKA,aAAOT,IAAP;AACD,KAhBD,CAgBE,OAAOU,GAAP,EAAY;AACZA,UAAIC,OAAJ,GAAe,iBAAgBD,IAAIC,OAAQ,EAA3C;AACA,YAAMD,GAAN;AACD;AACF,GArBD;;AAuBA;AACApB,SAAOkB,MAAP,GAAgBd,WAAhB;;AAEA;AACAJ,SAAOsB,GAAP,CAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AAC7BF,QAAIL,MAAJ,GAAad,WAAb;AACAqB;AACD,GAHD;AAID,C","file":"mailer.js","sourcesContent":["/**\n * Mailer\n *\n * @copyright Copyright (c) 2017, hugw.io\n * @author Hugo W - contact@hugw.io\n * @license MIT\n */\n\nimport nodemailer from 'nodemailer'\nimport Joi from 'joi'\n\nimport utils from '@/utils'\n\n/**\n * Object schemas\n * to validate configuration\n */\nconst schema = Joi.object({\n  enabled: Joi.boolean().required(),\n  transport: Joi.object().required(),\n  defaults: Joi.object({\n    from: Joi.string().required(),\n  }).required(),\n})\n\nexport default (server, config) => {\n  const {\n    enabled,\n    transport,\n    defaults,\n  } = utils.sanitize(config, schema, 'Invalid Mailer config')\n\n  if (!enabled) return\n  const transporter = nodemailer.createTransport(transport, defaults)\n  const { logger } = server\n\n  /**\n   * Dispatch email\n   */\n  transporter.dispatch = async (msg) => {\n    try {\n      const info = await transporter.sendMail(msg)\n\n      const response = {\n        ...info,\n        content: msg.text || msg.html || '',\n      }\n\n      const debug = nodemailer.getTestMessageUrl(info) || null\n\n      logger.info(null, {\n        mailer: { response, debug },\n        options: logger.options,\n      })\n\n      return info\n    } catch (err) {\n      err.message = `Mailer error: ${err.message}`\n      throw err\n    }\n  }\n\n  // Expose Mailer to the server object\n  server.mailer = transporter\n\n  // Expose Mailer to the request object\n  server.use((req, res, next) => {\n    req.mailer = transporter\n    next()\n  })\n}\n"]}